<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABSAK8DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDy
        VWpX+7TAcGnK1f0wftA6iivR/wBnT9kvx5+1Rrsln4N0ObUIbdgt1eysIbO0z/z0lbjPfaMuV6A1hiMV
        SoQdSs7JdWZ1cRCkueo7I86TpTl+avu3w1/wR68L+GblrPxv8XtP/t6NN0+i+HrB766i4PIQEysOP+eA
        6V0uo/8ABJv4R3ULQ2Pi74u2NwgGZr3wXf8AkDI4JJs4xjPX5/yr56XF2XJ2Um/SLt+R5suIMIno2/k/
        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
        oooAKKKKACiiigD/2Q==
</value>
  </data>
</root>